name: E2E Tests

on:
  pull_request:
  release:
    types:
      - published

jobs:
  build-android:
    runs-on: ubuntu-latest
    name: Build android for E2E tests
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v3
        with:
          cache: yarn
          node-version: 22.x

      - uses: actions/setup-java@v3
        with:
          cache: gradle
          distribution: temurin
          java-version: 17

      - name: Cache build
        uses: actions/cache@v4
        id: build-cache
        with:
          path: e2e-app/android/app/build
          key: android-build-${{hashFiles('**/package-lock.json', 'src/**/*.ts', 'e2e-app/**/*.ts')}}

      - run: yarn install
        if: steps.build-cache.outputs.cache-hit != 'true'

      - run: yarn build
        if: github.event_name != 'release' && steps.build-cache.outputs.cache-hit != 'true'

      - name: Install dependencies in e2e-app
        run: yarn install
        working-directory: e2e-app
        if: steps.build-cache.outputs.cache-hit != 'true'

      - name: Install ${{github.event.release.tag_name}} version of the package
        run: yarn install @fingerprintjs/fingerprintjs-pro-react-native@${{github.event.release.tag_name}}
        if: github.event_name == 'release' && steps.build-cache.outputs.cache-hit != 'true'
        working-directory: e2e-app

      - run: npx detox build --configuration android.emu.release
        working-directory: e2e-app
        if: steps.build-cache.outputs.cache-hit != 'true'

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: e2e-app/android/app/build

  e2e-tests-android:
    needs: build-android
    runs-on: ubuntu-latest
    name: Android E2E Tests
    steps:
      - uses: actions/checkout@v4

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - uses: actions/setup-node@v3
        with:
          cache: yarn
          node-version: 22.x

      - uses: actions/setup-java@v3
        with:
          cache: gradle
          distribution: temurin
          java-version: 17

      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-35

      - name: Install dependencies in e2e-app
        run: yarn install
        working-directory: e2e-app

      - uses: actions/download-artifact@v4
        with:
          name: app-release
          path: e2e-app/android/app

      - name: Debug build directory
        run: ls -R
        working-directory: e2e-app/android/app

      - name: Get device name
        id: device
        run: node -e "console.log('AVD_NAME=' + require('./.detoxrc').devices.emulator.device.avdName)" >> $GITHUB_OUTPUT
        working-directory: e2e-app

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@62dbb605bba737720e10b196cb4220d374026a6d
        with:
          api-level: 35
          arch: x86_64
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."
          avd-name: ${{ steps.device.outputs.AVD_NAME }}

      - name: Detox test
        uses: reactivecircus/android-emulator-runner@62dbb605bba737720e10b196cb4220d374026a6d
        with:
          api-level: 35
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          arch: x86_64
          avd-name: ${{ steps.device.outputs.AVD_NAME }}
          script: MAXIMUM_US_DEFAULT_PUBLIC_KEY=${{secrets.MAXIMUM_US_DEFAULT_PUBLIC_KEY}} cd e2e-app && npx detox test --configuration android.emu.release --headless --record-logs all

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: detox-artifacts
          path: '**/detox-artifacts'

  e2e-tests-ios:
    env:
      HOMEBREW_NO_AUTO_UPDATE: 1
      HOMEBREW_NO_INSTALL_CLEANUP: 1
    runs-on: macos-latest
    name: iOS E2E Tests
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v3
        with:
          cache: yarn
          node-version: 22.x

      - uses: maxim-lobanov/setup-xcode@60606e260d2fc5762a71e64e74b2174e8ea3c8bd
        with:
          xcode-version: latest-stable

      - name: Install macOS deps
        run: |
          brew tap wix/brew
          brew install applesimutils
          brew install fastlane

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          ruby-version: 3.2

      - name: Start iPhone simulator
        uses: futureware-tech/simulator-action@dab10d813144ef59b48d401cd95da151222ef8cd
        with:
          model: 'iPhone 16'

      - run: yarn install

      - run: yarn build
        if: github.event_name != 'release'

      - name: Install dependencies in e2e-app
        run: yarn install
        working-directory: e2e-app

      - name: Install ${{github.event.release.tag_name}} version of the package
        run: yarn install @fingerprintjs/fingerprintjs-pro-react-native@${{github.event.release.tag_name}}
        if: github.event_name == 'release'
        working-directory: e2e-app

      - run: npx detox build --configuration ios.sim.release
        working-directory: e2e-app

      - run: npx detox test --configuration ios.sim.release --cleanup --headless --record-logs all
        working-directory: e2e-app
        env:
          MAXIMUM_US_DEFAULT_PUBLIC_KEY: ${{ secrets.MAXIMUM_US_DEFAULT_PUBLIC_KEY }}

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: detox-artifacts
          path: '**/detox-artifacts'

